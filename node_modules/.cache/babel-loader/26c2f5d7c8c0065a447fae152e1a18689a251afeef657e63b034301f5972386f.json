{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amanp\\\\OneDrive\\\\Documents\\\\React\\\\weathernew\\\\src\\\\components\\\\Forecast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './forecast.css';\nimport leftImg from './images/bgleft.png';\n// const apiKey = \"edf4ce5a3b2ff94ead4cce61d6c9e5b5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = \"ce7b63cece294cbb99183108231912\";\nconst Forecast = () => {\n  _s();\n  const date = new Date();\n  const Days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  let weekDay = Days[date.getDay() - 1];\n  let day = date.getDate();\n  let year = date.getFullYear();\n  let weekDay1 = date.toString().slice(0, 3);\n  let month = date.toString().slice(4, 8);\n  let time = date.toString().slice(16, 21);\n  let todayDate = `${day} ${month}`;\n  let FullDate = `${day} ${month} ${year}`;\n  const [city, setCity] = useState('');\n  const [ID, setID] = useState('');\n  const [data, setData] = useState([]);\n  const [imageURL, setImageURL] = useState('');\n  const [filteredData, setReqData] = useState([]);\n  const [daily_temp_data, setDailyTempData] = useState([]);\n  const [temp, setTemp] = useState('');\n  const [clouds, setClouds] = useState('');\n\n  // const URL = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n  const URL = `http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=yes`;\n  const hourly_data = [];\n  const daily_data = [];\n  let IDURL = `http://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${city}`;\n  useEffect(() => {\n    const GetID = async () => {\n      const response = await fetch(IDURL);\n      const Rjson = await response.json();\n      setID(Rjson[0].id);\n      console.log(Rjson);\n    };\n    GetID();\n  }, [city]);\n  const fetchData = async () => {\n    const response = await fetch(URL);\n    const resJson = await response.json();\n    setData(resJson);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left_forecast\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-search search_glass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search Location\",\n              className: \"search_bar\",\n              onKeyDown: event => {\n                if (event.key === \"Enter\") {\n                  setCity(event.target.value);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                fetchData();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"datetime\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"citytime\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa-solid fa-location-dot arrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 59\n                }, this), \" \", city, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: [\" \", FullDate, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"citytime\",\n                children: [\" \", time, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: [\" \", weekDay, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temperature\",\n              children: [temp, \" \\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day_weather\",\n              children: [clouds, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"weather_icon\",\n                alt: \"Error\",\n                src: imageURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right_forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Forecast, \"DXQfrF0EvtMMO3qSDUHkoVm0pIw=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useEffect","useState","leftImg","apiKey","Forecast","date","Date","Days","weekDay","getDay","day","getDate","year","getFullYear","weekDay1","toString","slice","month","time","todayDate","FullDate","city","setCity","ID","setID","data","setData","imageURL","setImageURL","filteredData","setReqData","daily_temp_data","setDailyTempData","temp","setTemp","clouds","setClouds","URL","hourly_data","daily_data","IDURL","GetID","response","fetch","Rjson","json","id","console","log","fetchData","resJson","event","key","target","value"],"sources":["C:/Users/amanp/OneDrive/Documents/React/weathernew/src/components/Forecast.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './forecast.css';\r\nimport leftImg from './images/bgleft.png'\r\n// const apiKey = \"edf4ce5a3b2ff94ead4cce61d6c9e5b5\";\r\nconst apiKey = \"ce7b63cece294cbb99183108231912\";\r\n\r\n\r\nconst Forecast = () => {\r\n\r\n    const date = new Date();\r\n\r\n    const Days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n\r\n    let weekDay = Days[date.getDay() - 1];\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    let weekDay1 = date.toString().slice(0, 3);\r\n    let month = date.toString().slice(4, 8);\r\n    let time = date.toString().slice(16, 21);\r\n\r\n    let todayDate = `${day} ${month}`;\r\n    let FullDate = `${day} ${month} ${year}`;\r\n\r\n    const [city, setCity] = useState('');\r\n    const [ID, setID] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [filteredData, setReqData] = useState([]);\r\n    const [daily_temp_data, setDailyTempData] = useState([]);\r\n\r\n    const [temp, setTemp] = useState('');\r\n    const [clouds, setClouds] = useState('');\r\n\r\n    // const URL = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\r\n    const URL = `http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=yes`;\r\n\r\n    const hourly_data = [];\r\n    const daily_data = [];\r\n    let IDURL = `http://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${city}`\r\n    useEffect(()=>{\r\n        const GetID = async ()=>{\r\n            const response = await fetch(IDURL);\r\n            const Rjson = await response.json();\r\n            setID(Rjson[0].id);\r\n            console.log(Rjson);\r\n        }\r\n        GetID();\r\n\r\n    },[city]);\r\n        \r\n    const fetchData = async () => {\r\n        const response = await fetch(URL);\r\n        const resJson = await response.json();\r\n        setData(resJson);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container_forecast\">\r\n                <div className=\"container_center\">\r\n                    <div className=\"left_forecast\">\r\n\r\n                        <div className=\"search_div\">\r\n                            <i className='fa-solid fa-search search_glass'></i>\r\n                            <input type=\"text\" placeholder=\"Search Location\"\r\n                                className='search_bar'\r\n                                onKeyDown={(event) => {\r\n                                    if (event.key === \"Enter\") {\r\n                                        setCity(event.target.value);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <button onClick={()=>{fetchData();}}>Submit</button>\r\n                        </div>\r\n                        <div className=\"datetime\">\r\n                            <div>\r\n                                <div className=\"citytime\"><i class=\"fa-solid fa-location-dot arrow\"></i> {city} </div>\r\n                                <div className=\"date\"> {FullDate} </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className='citytime'> {time} </div>\r\n                                <div className=\"date\"> {weekDay} </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"temp_div\">\r\n                            <p className=\"temperature\">{temp} &deg;C</p>\r\n                            <div className=\"day_weather\">{clouds} <img className=\"weather_icon\" alt=\"Error\" src={imageURL} /></div>\r\n                        </div>\r\n                        {/* <div className=\"left_bottom\"></div> */}\r\n                    </div>\r\n                    <div className=\"right_forecast\">\r\n                        {/* <div className=\"dailyForecast\">\r\n                            <p className=\"daily_title\"><i class=\"fa-regular fa-clock icon_daily\"></i> Upcoming Hours</p>\r\n                            <div className=\"dailyForecast_div\">\r\n                                {filteredData.slice(0, 1).map((item) => {\r\n                                    return (\r\n                                        <div className=\"daily_div\">\r\n                                            <p className=\"daily_day\">{item.time}</p>\r\n                                            <p className=\"daily_temp\">{item.temp} &deg;c</p>\r\n                                            <img className=\"weather_icon_daily\" alt=\"Error\" src={`http://openweathermap.org/img/wn/${item.url}@2x.png`} />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                                {filteredData.slice(1,).map((item) => {\r\n                                    return (\r\n                                        <div className=\"daily_div1\">\r\n                                            <p className=\"daily_day\">{item.time}</p>\r\n                                            <p className=\"daily_temp\">{item.temp} &deg;c</p>\r\n                                            <img className=\"weather_icon_daily\" alt=\"Error\" src={`http://openweathermap.org/img/wn/${item.url}@2x.png`} />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        {/* DailyForecast */}\r\n                        {/* <div className=\"dailyForecast\">\r\n                            <p className=\"daily_title\"><i class=\"fa-regular fa-calendar icon_daily\"></i> Next Days</p>\r\n                            <div className=\"dailyForecast_div\">\r\n                                {daily_temp_data.map((item) => {\r\n\r\n                                    let daily_date1 = item.dt_txt.slice(5,7);\r\n                                    let daily_date2 = item.dt_txt.slice(8,10);\r\n                                    let daily_date = `${daily_date2}/${daily_date1}`;\r\n\r\n                                    return (\r\n                                        <div className=\"daily_div1\">\r\n                                            <p className=\"daily_day\">{weekDay1}</p>\r\n                                            <p className=\"daily_date\">{daily_date}</p>\r\n                                            <p className=\"daily_temp\">{item.main.temp} &deg;c</p>\r\n                                            <img className=\"weather_icon_daily\" alt=\"Error\" src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`} />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </div> */}\r\n                        {/* <div className=\"moreInfo\">\r\n                            <p className=\"more\">More Details of Today's Weather</p>\r\n                            <div className='grid_container'>\r\n                                <div className=\"grid_div\">1</div>\r\n                                <div className=\"grid_div\">2</div>\r\n                                <div className=\"grid_div\">3</div>\r\n                            </div>\r\n                            <div className='grid_container'>\r\n                                <div className=\"grid_div\">4</div>\r\n                                <div className=\"grid_div\">5</div>\r\n                                <div className=\"grid_div\">6</div>\r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default Forecast;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}