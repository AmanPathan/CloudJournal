[{"C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\index.js":"1","C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\App.js":"2","C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\components\\Searchpage.jsx":"3","C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\components\\Error.jsx":"4","C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\components\\Hero.jsx":"5"},{"size":301,"mtime":1703078218755,"results":"6","hashOfConfig":"7"},{"size":460,"mtime":1703077877523,"results":"8","hashOfConfig":"7"},{"size":26326,"mtime":1703930029458,"results":"9","hashOfConfig":"7"},{"size":323,"mtime":1702902567459,"results":"10","hashOfConfig":"7"},{"size":2039,"mtime":1703318614756,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xy38tq",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\index.js",[],[],"C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\App.js",[],[],"C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\components\\Searchpage.jsx",["29","30","31","32","33","34","35","36","37","38","39","40","41","42","43"],[],"import React, { useState, useEffect } from \"react\";\r\nimport './forecast.css';\r\nimport './media-queries.css';\r\nimport sunrise from './images/sunrise.png';\r\nimport sunset from './images/sunset.png';\r\nimport leftImg from './images/bgleft.png'\r\nimport alternate from './images/alternate.svg';\r\nimport spinner from './images/spinner.svg';\r\nimport sun from './images/sun.png';\r\nimport moon from './images/moon.png';\r\nimport moonrise from './images/moonrise.png';\r\nimport moonset from './images/moonset.png';\r\nimport cloud from './images/cloujournal.png';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = \"ce7b63cece294cbb99183108231912\";\r\n\r\nconst Searchpage = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const Days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n    const scroll_Left = () => {\r\n        document.getElementById(\"scroller1\").scrollLeft -= 300;\r\n    }\r\n    const scroll_Right = () => {\r\n        document.getElementById(\"scroller1\").scrollLeft += 300;\r\n    }\r\n    const scroll_Left1 = () => {\r\n        document.getElementById(\"scroller2\").scrollLeft -= 300;\r\n    }\r\n    const scroll_Right1 = () => {\r\n        document.getElementById(\"scroller2\").scrollLeft += 300;\r\n    }\r\n\r\n    const todaysdate = new Date();\r\n    let curr_time = todaysdate.toString().slice(16, 18);\r\n    let month = todaysdate.toString().slice(4, 8);\r\n    let weekDay = todaysdate.toString().slice(0, 3);\r\n\r\n    const [locationData, setLocationData] = useState('');\r\n    // console.log(locationData);\r\n    const [city, setCity] = useState('');\r\n    const [resData, setResponse] = useState([]);\r\n    const [cityName, setCityName] = useState('--');\r\n    const [cityRegion, setCityRegion] = useState('--');\r\n    const [data, setData] = useState([]);\r\n    const [forecastData, setForecastData] = useState([]);\r\n    const [ID, setID] = useState('');\r\n    const [timeFlag, setTimeFlag] = useState(false);\r\n\r\n    const [day1, setDay1] = useState([]);\r\n    const [day2, setDay2] = useState([]);\r\n\r\n    const [hourData, setHourData] = useState([]);\r\n\r\n    const [date, setDate] = useState('-- --');\r\n    const [astro_date, setAstroDate] = useState('');\r\n    const [curr_temp, setCurrTemp] = useState('--');\r\n    const [curr_weather, setCurrWeather] = useState('');\r\n    const [curr_icon, setCurrIcon] = useState('');\r\n    const [humidity, setHumidity] = useState('--');\r\n    const [wind, setWind] = useState('--');\r\n    const [precipitation, setPrecipitation] = useState('--');\r\n    const [pressure, setPressure] = useState('--');\r\n    const [airquality, setAirQ] = useState('--');\r\n    const [uvIndex, setUV] = useState('--');\r\n    const [uvRemark, setUVRemark] = useState('');\r\n    const [astroData, setAstroData] = useState([]);\r\n    const [finalDayData, setFinalDayData] = useState([]);\r\n\r\n    const [airData, setAirData] = useState([]);\r\n\r\n    const [metricflag, setMetricflag] = useState(true);\r\n    const [fahTemp, setChangedtemp] = useState('--');\r\n\r\n    const airRemark = ['Good', 'Moderate', 'Unhealthy', 'Unhealthy', 'Very Unhealthy', 'Hazardous'];\r\n\r\n    let URL = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=id:${ID}&aqi=yes`;\r\n    let URL2 = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${locationData}&days=7&aqi=no&alerts=no`;\r\n\r\n    let ForecastURL = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${city}&days=7&aqi=no&alerts=no`;\r\n    let IDURL = `http://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${city}`;\r\n    let IDURL2 = `https://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${locationData}`;\r\n\r\n    let AstronomyURL = `http://api.weatherapi.com/v1/astronomy.json?key=${apiKey}&q=${city}&dt=${astro_date}`;\r\n\r\n\r\n    const GetID = async (url) => {\r\n        const response = await fetch(url);\r\n        const Rjson = await response.json();\r\n        setResponse(Rjson);\r\n        setID(Rjson[0].id);\r\n        setCityName(Rjson[0].name);\r\n        setCityRegion(Rjson[0].region);\r\n\r\n        const astroRes = await fetch(AstronomyURL);\r\n        const astrojson = await astroRes.json();\r\n        setAstroData(astrojson.astronomy.astro);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetID(IDURL);\r\n    }, [city]);\r\n\r\n    const dailyData = [];\r\n    const hourlyData = [];\r\n\r\n    useEffect(() => {\r\n        if (uvIndex < 3) {\r\n            setUVRemark('Low');\r\n        } else if (uvIndex > 2 && uvIndex < 6) {\r\n            setUVRemark(\"Medium\");\r\n        }\r\n        else if (uvIndex > 6) {\r\n            setUVRemark(\"High\");\r\n        }\r\n        else {\r\n            setUVRemark(\"\");\r\n        }\r\n    }, [uvIndex]);\r\n\r\n    const GetInfo = async () => {\r\n        // const res = await fetch(URL);\r\n        // const resJson = await res.json();\r\n        const res = await axios.get(URL);\r\n        setData(res.data);\r\n        const forecastRes = await axios.get(ForecastURL);\r\n        // const forecastjson = await forecastRes.json();\r\n        setForecastData(forecastRes.data.forecast.forecastday);\r\n        setDay1(forecastData[0].hour);\r\n        setDay2(forecastData[1].hour);\r\n        let ind = Number(curr_time);\r\n        if (ind === 23) {\r\n            ind = 24;\r\n        }\r\n        for (ind; ind < 24; ind++) {\r\n            let curr_hour = {\r\n                \"temp\": day1[ind].temp_c,\r\n                \"icon\": day1[ind].condition.icon,\r\n                \"hour\": day1[ind].time.slice(11,)\r\n            }\r\n            hourlyData.push(curr_hour);\r\n        };\r\n        for (ind = 0; ind < 24; ind++) {\r\n            let curr_hour = {\r\n                \"temp\": day2[ind].temp_c,\r\n                \"icon\": day2[ind].condition.icon,\r\n                \"hour\": day2[ind].time.slice(11,)\r\n            }\r\n            hourlyData.push(curr_hour);\r\n        };\r\n\r\n        setHourData(hourlyData);\r\n\r\n        for (let k = 1; k < 7; k++) {\r\n            let d = new Date(forecastData[k].date);\r\n            let dayIndex = d.getDay();\r\n            let c = forecastData[k].date\r\n            let c1 = c.slice(5, 7);\r\n            let c2 = c.slice(8, 10);\r\n            let curr_daily_date = `${c2}/${c1}`;\r\n\r\n            let daily_temp_data = {\r\n                \"temp\": forecastData[k].day.avgtemp_c,\r\n                \"icon\": forecastData[k].day.condition.icon,\r\n                \"day_date\": Days[dayIndex],\r\n                \"today_date\": curr_daily_date\r\n            }\r\n            dailyData.push(daily_temp_data);\r\n        }\r\n        setFinalDayData(dailyData);\r\n\r\n\r\n        setCityName(data.location.name);\r\n        setCurrTemp(data.current.temp_c);\r\n        setChangedtemp(data.current.temp_f);\r\n        setCurrWeather(data.current.condition.text);\r\n        setCurrIcon(data.current.condition.icon);\r\n        setHumidity(data.current.humidity);\r\n        setWind(data.current.wind_kph);\r\n        setPrecipitation(data.current.precip_mm);\r\n        setPressure(data.current.pressure_mb);\r\n        setUV(data.current.uv);\r\n        setAirQ(data.current.air_quality['us-epa-index']);\r\n\r\n        let airqualitydetails = {\r\n            \"co\": data.current.air_quality.co,\r\n            \"no2\": data.current.air_quality.no2,\r\n            \"o3\": data.current.air_quality.o3,\r\n            \"so2\": data.current.air_quality.so2,\r\n            \"pm2_5\": data.current.air_quality.pm2_5,\r\n            \"pm10\": data.current.air_quality.pm10\r\n        }\r\n        setAirData(airqualitydetails);\r\n\r\n        let curr_date = data.location.localtime;\r\n        let timetoCmp = curr_date.slice(11, 13);\r\n        let astronomy_date = curr_date.slice(0, 10);\r\n        setAstroDate(astronomy_date);\r\n        let today = curr_date.slice(8, 10);\r\n        curr_date = `${weekDay} ${today} ${month}`;\r\n        setDate(curr_date);\r\n\r\n        if (timetoCmp === curr_time) {\r\n            setTimeFlag(true);\r\n        }\r\n        else {\r\n            setTimeFlag(false);\r\n        }\r\n        console.log(\"inside GetInfo\");\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const getData = async () => {\r\n        // const res = await axios.get(\"https://api.ipify.org/?format=json\");\r\n        // let LocationURL = `http://ip-api.com/json/${res.data.ip}`\r\n        // const weatherData = await fetch(LocationURL);\r\n        // const weatherJson = await weatherData.json();\r\n\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            let lat = position.coords.latitude;\r\n            let lon = position.coords.longitude;\r\n            let loc = `${lat},${lon}`;\r\n            setLocationData(loc);\r\n        });\r\n\r\n        GetInfo();\r\n        // console.log(\"reached end\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    // useEffect(()=>{\r\n    //     GetID(IDURL2);\r\n    //     GetInfo();\r\n    // })\r\n    // console.log(hourlyData);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={isLoading ? \"loader_div\" : \"loader_div_none\"}>\r\n                <span class=\"loader\"></span>\r\n                <p className=\"loader_text\">Wait while we load the data ...</p>\r\n            </div>\r\n            <div className=\"container_forecast\">\r\n                <div className=\"container_center\">\r\n                    <div className=\"container_top\">\r\n\r\n                        <div className=\"left_forecast\">\r\n\r\n                            <div className=\"search_div\">\r\n                                <i className='fa-solid fa-search search_glass'></i>\r\n                                <input type=\"text\" placeholder=\"Search Location\"\r\n                                    className='search_bar'\r\n                                    id=\"search_bar\"\r\n                                    value={city}\r\n                                    onChange={(e) => {\r\n                                        setCity(e.target.value);\r\n                                    }}\r\n                                    onKeyDown={(event) => {\r\n                                        if (event.key === \"Enter\") {\r\n                                            setIsLoading(true);\r\n                                            GetInfo();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <i class=\"fa-solid fa-location-crosshairs location_icon\" onClick={() => { GetID(IDURL2) }}></i>\r\n                            </div>\r\n                            <div className={resData.length > 0 ? \"suggestions\" : \"\"}>\r\n                                <ul className=\"suggest_ul\">\r\n                                    {\r\n                                        resData.length > 0 ?\r\n                                            resData.map((item) => {\r\n                                                return <li className=\"suggest_li\"\r\n                                                    onClick={() => {\r\n                                                        setCity(item.name);\r\n                                                        setResponse([]);\r\n                                                        document.getElementById(\"search_bar\").focus();\r\n                                                    }}>\r\n                                                    {item.name}</li>\r\n                                            }) :\r\n                                            null\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"datetime\">\r\n                                <div className=\"datetime_left\">\r\n                                    <div className=\"citytime\"><i class=\"fa-solid fa-location-dot arrow\"></i> {cityName ? `${cityName}, ${cityRegion}` : \"\"} </div>\r\n                                    <div className=\"date\">{date}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"temp_div\">\r\n                                {/* <p className=\"temperature\">{metricflag ? curr_temp : fahTemp} <sup className=\"super\"><span className={metricflag ? \"changeMetric1\" : \"changeMetric2\"} onClick={() => { setMetricflag(!metricflag) }}>&deg;C</span><span className=\"changeMetric3\">|</span><span className={metricflag ? \"changeMetric2\" : \"changeMetric1\"} onClick={() => { setMetricflag(!metricflag) }}>&deg;F</span></sup></p> */}\r\n                                <p className=\"temperature\">{curr_temp} <sup className=\"super\">&deg;C</sup></p>\r\n                                <div className=\"day_weather\"> {curr_weather} <img className=\"weather_icon\" alt=\"...\" src={curr_icon ? curr_icon : alternate} /></div>\r\n                            </div>\r\n\r\n                            <p className=\"company_name\">\r\n                                CloudJournal\r\n                                <img src={cloud} className=\"logo\" />\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"right_forecast\">\r\n                            <div className=\"dailyForecast1\">\r\n                                <p className=\"daily_title\">\r\n                                    <div>\r\n                                        <i class=\"fa-regular fa-calendar icon_daily\"></i> Next Days\r\n                                    </div>\r\n                                    <div className=\"controlers\">\r\n                                        <i class=\"fa-solid fa-circle-chevron-left arrowL\" onClick={scroll_Left}></i>\r\n                                        <i class=\"fa-solid fa-circle-chevron-right arrowR\" onClick={scroll_Right}></i>\r\n                                    </div>\r\n                                </p>\r\n                                <div className=\"dailyForecast_div\" id=\"scroller1\">\r\n                                    {finalDayData.length === 0 ?\r\n\r\n\r\n                                        <div className=\"daily_div1\">\r\n                                            <p className=\"daily_day\">--</p>\r\n                                            {/* <img className=\"weather_icon_daily\" alt=\"Error\" src={item.icon} /> */}\r\n                                            <p className=\"daily_temp\">-- &deg;c</p>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"daily_div1\">\r\n                                            <p className=\"daily_day\">Today</p>\r\n                                            <img className=\"weather_icon_daily\" alt=\"Error\" src={curr_icon} />\r\n                                            <p className=\"daily_temp\">{curr_temp} &deg;c</p>\r\n                                        </div>\r\n                                    }\r\n                                    {finalDayData.map((item) => {\r\n                                        return (\r\n                                            <div className=\"daily_div1\">\r\n                                                <p className=\"daily_day\">{item.day_date}</p>\r\n                                                {/* <p className=\"daily_date\">{item.today_date}</p> */}\r\n                                                <img className=\"weather_icon_daily\" alt=\"Error\" src={item.icon} />\r\n                                                <p className=\"daily_temp\">{item.temp} &deg;c</p>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"moreInfo\">\r\n                                <div className='grid_container'>\r\n                                    <div className=\"grid_div\">\r\n                                        <p className=\"more_title\">Humidity <i class=\"fa-solid fa-droplet more_icons\"></i> </p>\r\n                                        <p className=\"more_info\">{humidity} <span className=\"metric\">%</span> </p>\r\n                                    </div>\r\n                                    <div className=\"grid_div\">\r\n                                        <p className=\"more_title\">Wind <i class=\"fa-solid fa-wind more_icons\"></i> </p>\r\n                                        <p className=\"more_info\">{wind} <span className=\"metric\">km/hr</span></p>\r\n                                    </div>\r\n                                    <div className=\"grid_div\">\r\n                                        <p className=\"more_title\">Rainfall <i class=\"fa-solid fa-cloud-rain more_icons\"></i> </p>\r\n                                        <p className=\"more_info\">{precipitation ? `${precipitation}` : \"0\"} <span className=\"metric\">mm</span></p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='grid_container grid_container_mobile'>\r\n                                    <div className=\"grid_div\">\r\n                                        <p className=\"more_title\">UV Index <i class=\"fa-regular fa-eye more_icons\"></i> </p>\r\n                                        <p className=\"more_info\">{uvIndex} <span className=\"metric\"> {uvRemark} </span></p>\r\n                                    </div>\r\n                                    <div className=\"grid_div\">\r\n                                        <p className=\"more_title\">Pressure <i class=\"fa-solid fa-temperature-high more_icons\"></i> </p>\r\n                                        <p className=\"more_info\">{pressure} <span className=\"metric\">mb</span></p>\r\n                                    </div>\r\n                                    <div className=\"grid_div\">\r\n                                        <p className=\"more_title\">Air Quality <i class=\"fa-solid fa-smog more_icons\"></i> </p>\r\n                                        <p className=\"more_info1\">{airRemark[airquality] ? airRemark[airquality] : \"--\"}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"more1\"><i class=\"fa-solid fa-circle-info icon_daily\"></i> More Details of Today's Weather</p>\r\n                    <div className=\"container_bottom\">\r\n\r\n                        <div className=\"dailyForecast\">\r\n                            <p className=\"daily_title\">\r\n                                <div>\r\n                                    <i class=\"fa-regular fa-clock icon_daily\"></i> Upcoming Hours\r\n                                </div>\r\n                                <div className=\"controlers\">\r\n                                    <i class=\"fa-solid fa-circle-chevron-left arrowL\" onClick={scroll_Left1}></i>\r\n                                    <i class=\"fa-solid fa-circle-chevron-right arrowR\" onClick={scroll_Right1}></i>\r\n                                </div>\r\n                            </p>\r\n                            <div className=\"dailyForecast_div\" id=\"scroller2\">\r\n                                <div className=\"daily_div1\">\r\n                                    <p className=\"daily_day\">Now</p>\r\n                                    <img className={curr_icon ? \"weather_icon_daily\" : \"weather_icon_load\"} alt=\"Error\" src={curr_icon ? curr_icon : alternate} />\r\n                                    <p className=\"daily_temp\">{curr_temp} &deg;c</p>\r\n                                </div>\r\n                                {hourData.map((e) => {\r\n                                    return (\r\n                                        <div className=\"daily_div1\">\r\n                                            <p className=\"daily_day\">{e.hour}</p>\r\n                                            <img className=\"weather_icon_daily\" alt=\"Error\" src={e.icon} />\r\n                                            <p className=\"daily_temp\">{e.temp} &deg;c</p>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container_bottom_2\">\r\n                            <div className=\"sunrise_data\">\r\n                                <div className=\"sunrise_div\">\r\n                                    <div className=\"sunrise_left\">\r\n                                        <div className=\"sunrise_temp1\"> <img src={sun} alt=\"Sun\" className=\"sun\" /><span className=\"sunrise_title\">Sunrise/Sunset</span></div>\r\n                                        <div className=\"date sunrise_temp\"><span>Rise</span>  {astroData.sunrise ? astroData.sunrise : \"--\"} <img className=\"sunrise\" src={sunrise} /></div>\r\n                                        <div className=\"date sunrise_temp\"><span>Set</span>  {astroData.sunrise ? astroData.sunrise : \"--\"} <img className=\"sunrise\" src={sunset} /></div>\r\n                                    </div>\r\n                                    <div className=\"vline\"></div>\r\n                                    <div className=\"moonrise_right\">\r\n                                        <div className=\"sunrise_temp1\"><img src={moon} alt=\"Moon\" className=\"sun moon\" /><span className=\"sunrise_title\">Moonrise/Moonset</span></div>\r\n                                        <div className=\"date sunrise_temp\"><span>Rise</span> {astroData.sunrise ? astroData.sunrise : \"--\"} <img className=\"moonrise\" src={moonrise} /></div>\r\n                                        <div className=\"date sunrise_temp\"><span>Set</span>  {astroData.sunrise ? astroData.sunrise : \"--\"} <img className=\"moonrise\" src={moonset} /></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"airquality_data\">\r\n                                <p className=\"pollutants\">Current Pollutants</p>\r\n                                <div className=\"airdata_row\">\r\n                                    <div className=\"quality_div\">\r\n                                        <p className=\"index_text\">CO</p>\r\n                                        <p className=\"index_value\">{airData.co ? airData.co : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                    </div>\r\n                                    <div className=\"quality_div\">\r\n                                        <p className=\"index_text\">O<sub>3</sub></p>\r\n                                        <p className=\"index_value\">{airData.o3 ? airData.o3 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                    </div>\r\n                                    <div className=\"quality_div\">\r\n                                        <p className=\"index_text\">NO<sub>2</sub></p>\r\n                                        <p className=\"index_value\">{airData.no2 ? airData.no2 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                    </div>\r\n                                    <div className=\"quality_div\">\r\n                                        <p className=\"index_text\">SO<sub>2</sub></p>\r\n                                        <p className=\"index_value\">{airData.so2 ? airData.so2 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                    </div>\r\n                                    <div className=\"quality_div\">\r\n                                        <p className=\"index_text\">PM<sub>10</sub></p>\r\n                                        <p className=\"index_value\">{airData.pm10 ? airData.pm10 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"airdata_mobile\">\r\n                                    <div className=\"airdata_col\">\r\n\r\n                                        <div className=\"quality_div\">\r\n                                            <p className=\"index_text\">CO</p>\r\n                                            <p className=\"index_value\">{airData.co ? airData.co : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                        </div>\r\n                                        <div className=\"quality_div\">\r\n                                            <p className=\"index_text\">O<sub>3</sub></p>\r\n                                            <p className=\"index_value\">{airData.o3 ? airData.o3 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                        </div>\r\n                                        <div className=\"quality_div\">\r\n                                            <p className=\"index_text\">NO<sub>2</sub></p>\r\n                                            <p className=\"index_value\">{airData.no2 ? airData.no2 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"airdata_col\">\r\n\r\n                                        <div className=\"quality_div\">\r\n                                            <p className=\"index_text\">SO<sub>2</sub></p>\r\n                                            <p className=\"index_value\">{airData.so2 ? airData.so2 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                        </div>\r\n                                        <div className=\"quality_div\">\r\n                                            <p className=\"index_text\">PM<sub>10</sub></p>\r\n                                            <p className=\"index_value\">{airData.pm10 ? airData.pm10 : \"--\"} <span className=\"index_unit\">μg/m3</span></p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"footer\">\r\n                            <p className=\"developer\">Designed and Developed by AmanPathan</p>\r\n                            &nbsp;\r\n                            <a href=\"https://github.com/AmanPathan/CloudJournal\" target=\"_blank\" className=\"link\"><i class=\"fa-brands fa-github\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Searchpage;","C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\components\\Error.jsx",[],[],"C:\\Users\\amanp\\OneDrive\\Documents\\Projects\\cloudjournal\\src\\components\\Hero.jsx",["44"],[],"import React from 'react';\r\nimport './hero.css';\r\nimport image1 from './images/Weather.gif';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Hero = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"left-container\">\r\n                    <img className=\"illustration\" src={image1} />\r\n                    <div className='content-list'>\r\n                        <ul className='content-ul'>\r\n                            <li className='content-li'><i class=\"fa-regular fa-circle-check\"></i> Real-Time Weather Updates</li>\r\n                            <li className='content-li'><i class=\"fa-regular fa-circle-check\"></i> Location-Centric Forecasting</li>\r\n                        </ul>\r\n                        <ul className='content-ul'>\r\n                            <li className='content-li'><i class=\"fa-regular fa-circle-check\"></i> Accurate and Reliable Data</li>\r\n                            <li className='content-li'><i class=\"fa-regular fa-circle-check\"></i> Interactive Weather Maps</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <div className=\"content\">\r\n                        <div className='content-div'>\r\n                            <h2 className=\"content-title\">CloudJournal Forecast</h2>\r\n                            <p className=\"content-tagline\">We bring you more than just weather updates</p>\r\n                        </div>\r\n                        <div className='content-div'>\r\n                            <p className=\"content-text\">Welcome to CloudJournal, your go-to destination for accurate and up-to-date weather information. </p>\r\n                            <button className='explore' onClick={()=>{navigate(\"/forecast\")}}>See Weather</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default Hero;",{"ruleId":"45","severity":1,"message":"46","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":15},{"ruleId":"45","severity":1,"message":"49","line":8,"column":8,"nodeType":"47","messageId":"48","endLine":8,"endColumn":15},{"ruleId":"45","severity":1,"message":"50","line":51,"column":12,"nodeType":"47","messageId":"48","endLine":51,"endColumn":20},{"ruleId":"45","severity":1,"message":"51","line":75,"column":12,"nodeType":"47","messageId":"48","endLine":75,"endColumn":22},{"ruleId":"45","severity":1,"message":"52","line":75,"column":24,"nodeType":"47","messageId":"48","endLine":75,"endColumn":37},{"ruleId":"45","severity":1,"message":"53","line":76,"column":12,"nodeType":"47","messageId":"48","endLine":76,"endColumn":19},{"ruleId":"45","severity":1,"message":"54","line":81,"column":9,"nodeType":"47","messageId":"48","endLine":81,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":105,"column":8,"nodeType":"57","endLine":105,"endColumn":14,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":235,"column":8,"nodeType":"57","endLine":235,"endColumn":10,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":304,"column":33,"nodeType":"63","endLine":304,"endColumn":69},{"ruleId":"61","severity":1,"message":"62","line":417,"column":142,"nodeType":"63","endLine":417,"endColumn":183},{"ruleId":"61","severity":1,"message":"62","line":418,"column":141,"nodeType":"63","endLine":418,"endColumn":181},{"ruleId":"61","severity":1,"message":"62","line":423,"column":141,"nodeType":"63","endLine":423,"endColumn":184},{"ruleId":"61","severity":1,"message":"62","line":424,"column":141,"nodeType":"63","endLine":424,"endColumn":183},{"ruleId":"64","severity":1,"message":"65","line":486,"column":29,"nodeType":"63","messageId":"66","endLine":486,"endColumn":115,"fix":"67"},{"ruleId":"61","severity":1,"message":"62","line":14,"column":21,"nodeType":"63","endLine":14,"endColumn":66},"no-unused-vars","'leftImg' is defined but never used.","Identifier","unusedVar","'spinner' is defined but never used.","'timeFlag' is assigned a value but never used.","'metricflag' is assigned a value but never used.","'setMetricflag' is assigned a value but never used.","'fahTemp' is assigned a value but never used.","'URL2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetID' and 'IDURL'. Either include them or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"70","text":"71"},{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},[26117,26117]," rel=\"noreferrer\"","Update the dependencies array to be: [GetID, IDURL, city]",{"range":"76","text":"77"},"Update the dependencies array to be: [getData]",{"range":"78","text":"79"},[4175,4181],"[GetID, IDURL, city]",[8536,8538],"[getData]"]